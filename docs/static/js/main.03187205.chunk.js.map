{"version":3,"sources":["component/AddCategory.js","helpers/getGifs.js","component/GifGridItem.js","component/GifGrid.js","hooks/useFetchGifs.js","component/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","image","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgsResponse","useFetchGifs","img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACGJ,GACDF,GAAe,SAAAO,GAAI,OAAML,GAAN,mBAAqBK,OACxCJ,EAAc,KAEdK,QAAQC,IAAI,gCAMZ,2BACIC,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,Y,uBCNnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAWH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAU,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbV,IAAG,UAAEQ,EAAMG,cAAR,aAAE,EAAcC,iBAAiBZ,QAI5CT,QAAQC,IAAIc,GAdO,kBAeXA,GAfW,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,yBAAKc,UAAU,yCACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHJO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECAf,SAAEA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgBvC,OATAC,qBAAW,WACPxB,EAASC,GAAWwB,MAAK,SAAAC,GACrBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAEEqB,EDd2BK,CAAa1B,GAAjCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACI,oCACI,4BAAMpB,GAELoB,GAAW,uBAAGJ,UAAU,yCAAb,WAEZ,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAkB,GAAG,OACX,kBAAC,EAAD,eACIC,IAAKD,EAAIhB,IACJgB,UEelBE,EA/BM,WAAM,MAIa3C,mBAAS,CAAC,cAJvB,mBAIhB4C,EAJgB,KAIJ7C,EAJI,KAWvB,OACI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAM5B,EACNA,SAAWA,U,MCnBvC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.03187205.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputvalue, setinputvalue] = useState('')\n\n    const handleInputchange = ( e ) => {\n        // console.log(e.target.value);\n        setinputvalue( e.target.value )\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if ( inputvalue ) {\n            setCategories( cats => [ inputvalue, ...cats ]);\n            setinputvalue('');\n        }else{\n            console.log('No debe ser vacio el input');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputvalue }\n                onChange={ handleInputchange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\nexport const getGifs = async ( category ) => {\n\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=F33ei7aeQi1hZUIBckbLTujp5wSqA6xT`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( image => {\n        return {\n            id: image.id,\n            title: image.title,\n            url: image.images?.downsized_medium.url\n        }\n    });\n\n    console.log(gifs);\n    return  gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url} ) => {\n    // console.log( title, url);\n    return (\n        <div className='card animate__animated animate__swing'>\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { category } ) => {\n    \n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            {loading && <p className='card animate__animated animate__flash'>Loading</p> }\n\n            <div className='card-grid'>\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={img.id} \n                            { ...img }\n                        />\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category )=> {\n    \n    const [state, setState] = useState({\n        data: [], \n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category ).then(imgsResponse => {\n            setState({\n                data: imgsResponse,\n                loading: false\n            });\n        });\n    }, [ category ])\n\n    return state; // data del arreglo declarado de un objeto\n}","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['Samurai X']);\n\n    // const handleAdd = () => {\n    //     setCategories( ['Dragon Ball GT', ...categories] );\n    //     // setCategories( cats => [ ... cats, 'Dagon Ball GT']);\n    // }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={ category }\n                            category={ category } \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './component/GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}